package com.kh.practice.map;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class MapPractice {
	/*
	 * *Map<K, V> 특징
	 * : Key - value 형식으로 데이터를 저장(관리)
	 * 	+Key에 해당하는 데이터 : 중복 허용하지 않음(Set방식)
	 * 	+Value에 해당하는 데이터 : key값이 중복되지 않은 경우 중복 허용(list방식)
	 * 
	 * *Map의 메소드
	 * [1] 데이터 추가 : put(키에 해당하는 값, 밸루에 해당하는 값)
	 * [2] 데이터 삭제 : remove(키에 해당하는 값)
	 * [3] 데이터 조회 : get(키에 해당하는 값)
	 * [4] 키 목록 조회 : keySet()
	 * [5] 데이터 길이 조회 : size() 
	 */
	public static void main(String[] args) {

		hashMapTest();
	}

	public static void hashMapTest() {
		//HashMap 객체 선언 및 생성
		//Key - 정수형 데이터, Value - 문자열 데이터
		Map<Integer, String> hashMap = new HashMap<>();
		
		//Map구조에 데이터를 저장(추가) : put(key, value);
		hashMap.put(1000, "프리티인창");
		hashMap.put(1001, "종군당");
		hashMap.put(1002, "ㄸ피하 기다운 로드");
		
		//키 목록 조회 : keySet()
		Set<Integer> keyList= hashMap.keySet();
		
		//키 데이터 출력
		System.out.println("--------------------key list----------------");
		for(Integer key : keyList) {
			System.out.println(key);
		}
		System.out.println("--------------------------------------------");
		
		// 데이터 조회
		for(Integer key : keyList) {
			System.out.println(key+":"+hashMap.get(key));
		}
		System.out.println("--------------------------------------------");
		
		//"ㄸ피하 기다운 로드" 데이터 제거
		hashMap.remove(1002);
		
		//Iterator 객체를 사용하여 조회
		Iterator<Integer>it = keyList.iterator();
		while(it.hasNext()) {
			int key = it.next();
			System.out.println(key+":"+hashMap.get(key));
		}
		System.out.println("--------------------------------------------");
		
		//entrySet():key+value 세트의 집합
		Set entrySet = hashMap.entrySet();
		
		Iterator entryIt = entrySet.iterator();
		while(entryIt.hasNext()) {
			Entry entry = (Entry)entryIt.next();
			
			Integer key = (Integer)entry.getKey();
			String value = (String)entry.getValue();
			
			System.out.println(key + ":" + value);
		}
	}
}
